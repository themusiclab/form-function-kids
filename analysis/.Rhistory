)
library(gridExtra)
# Calculating pair-wise difference
disco.KFCmusicfeatures <- disco.KFCmusicfeatures %>%
mutate(HEALING_DANCE = (HEALING_percentage - DANCE_percentage))%>%
mutate(LULLABY_DANCE = (LULLABY_percentage - DANCE_percentage))%>%
mutate(LULLABY_HEALING = (LULLABY_percentage - HEALING_percentage))
## append song type (CH: this is a much easier way to do this)
disco.KFCmusicfeatures$type <- disco.meta$type[
match(sprintf('NHSDiscography-%03d', disco.KFCmusicfeatures$song),
disco.meta$song
)
]
# custom function for plotting
plot_correlation <- function(feature, intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition)) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2, aes(col = type)) +
ylab(ylab) +
xlab(xlab) +
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x, col = 'black') +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
# 2nd plotting style where there is a regression line for each song type
plot_correlation2 <- function(feature, intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "right") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
colors <- c("#F8766D", "#00BA38","#619CFF")
type_color <- colors[as.factor(disco.KFCmusicfeatures$type)]
# Dance (-) vs Healing (+) ------------------------
p1 <- vector('list', 10)
p1[[1]] <- plot_correlation('tempo_adj', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Adjusted Tempo')
p1[[2]] <- plot_correlation('rel_strength_top_pitchcls', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Relative Strength of
Modal Pitch Classes')
p1[[3]] <- plot_correlation('macrometer_ord', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Macrometer Consistency')
p1[[4]] <- plot_correlation('quality', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Quality')
p1[[5]] <- plot_correlation('micrometer_triple', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Triple Micrometer')
p1[[6]] <- plot_correlation('melodic_thirds', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Melodic Thirds')
p1[[7]] <- plot_correlation('macrometer_triple', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Triple Macrometer')
p1[[8]] <- plot_correlation('modal_interval_prevalence', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Modal Interval')
p1[[9]] <- plot_correlation('variation_rhythmic', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Rhythmic Variation')
p1[[10]] <- plot_correlation('stepwise_motion', 'HEALING_DANCE', c('Dance', 'Healing'), 'Dance(-) vs. Healing(+)', 'Stepwise Motion')
grid.arrange(p1[[1]], p1[[2]],p1[[3]],p1[[4]],p1[[5]],p1[[6]],p1[[7]],p1[[8]],p1[[9]],p1[[10]],nrow = 2)
p2 <- vector('list', 9)
p2[[1]] <- plot_correlation('tempo_adj', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Adjusted Tempo')
p2[[2]] <- plot_correlation('accent', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Accent')
p2[[3]] <- plot_correlation('macrometer_ord', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Macrometer Consistency')
p2[[4]] <- plot_correlation('range', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Range')
p2[[5]] <- plot_correlation('mean_interval', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Mean Interval')
p2[[6]] <- plot_correlation('micrometer_duple', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Micrometer Duple')
p2[[7]] <- plot_correlation('rel_strength_modal_intervals', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Relative Strength of Interval')
p2[[8]] <- plot_correlation('rel_strength_top_pitchcls', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Relative Strength of Modal Pitch Classes')
p2[[9]] <- plot_correlation('scale_quality_minor', 'LULLABY_DANCE', c('Dance', 'Lullaby'), 'Dance(-) vs. Lullaby(+)', 'Scale Quality')
grid.arrange(p2[[1]],p2[[2]],p2[[3]],p2[[4]],p2[[5]],p2[[6]],p2[[7]],p2[[8]],p2[[9]], nrow = 2)
p3 <- vector('list', 5)
p3[[1]] <- plot_correlation('accent', 'LULLABY_DANCE', c('Healing', 'Lullaby'), 'Healing(-) vs. Lullaby(+)', 'Accent')
p3[[2]] <- plot_correlation('pitch_class_variety', 'LULLABY_DANCE', c('Healing', 'Lullaby'), 'Healing(-) vs. Lullaby(+)', 'Pitch Class Variety')
p3[[3]] <- plot_correlation('range', 'LULLABY_DANCE', c('Healing', 'Lullaby'), 'Healing(-) vs. Lullaby(+)', 'Range')
p3[[4]] <- plot_correlation('micrometer_triple', 'LULLABY_DANCE', c('Healing', 'Lullaby'), 'Healing(-) vs. Lullaby(+)', 'Triple Micrometer')
p3[[5]] <- plot_correlation('quality', 'LULLABY_DANCE', c('Healing', 'Lullaby'), 'Healing(-) vs. Lullaby(+)', 'Quality')
grid.arrange(p3[[1]],p3[[2]],p3[[3]],p3[[4]],p3[[5]], nrow = 2)
p4 <- vector('list', 6)
p4[[1]] <- plot_correlation2('tempo_adj', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Adjusted tempo')
p4[[2]] <- plot_correlation2('macrometer_ord', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Macrometer consistency')
p4[[3]] <- plot_correlation2('variation_rhythmic', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Rhythmic Variation')
p4[[4]] <- plot_correlation2('mean_interval', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Mean Interval')
p4[[5]] <- plot_correlation2('melodic_thirds', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Melodic Thrids')
p4[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Relative Strength of Modal Pitch Class')
grid.arrange(p4[[1]],p4[[2]],p4[[3]],p4[[4]],p4[[5]],p4[[6]], nrow = 2)
p5 <- vector('list', 4)
p5[[1]] <- plot_correlation2('accent', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Accent')
p5[[2]] <- plot_correlation2('micrometer_duple', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Micrometer duple')
p5[[3]] <- plot_correlation2('range', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Range')
p5[[4]] <- plot_correlation2('quality', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Quality')
grid.arrange(p5[[1]],p5[[2]],p5[[3]],p5[[4]],nrow = 2)
p6 <- vector('list', 4)
p6[[1]] <- plot_correlation2('micrometer_triple', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% Healing (Kids)', 'Micrometer triple')
p6[[2]] <- plot_correlation2('variation_rhythmic', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% Healing  (Kids)', 'Rhythmic variation')
p6[[3]] <- plot_correlation2('pitch_class_variety', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% Healing (Kids)', 'Pitch-Class Variety')
p6[[4]] <- plot_correlation2('quality', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% Healing (Kids)', 'Quality')
grid.arrange(p6[[1]],p6[[2]],p6[[3]],p6[[4]],nrow = 2)
testResponsesFC <- readr::read_csv(file = "~/git/kfc/data/TML-FC_NHS_sci.csv", col_names = TRUE)
testResponsesFC <- testResponsesFC[!(testResponsesFC$type=="LOVE"),]
testResponsesFC <- testResponsesFC[!(testResponsesFC$response=="LOVE"),]
AdultSongAccuracy<-
testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY,
FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total)%>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)%>%
dplyr::mutate(FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage),
FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage),
FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage))
AdultSongAccuracy<-
testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY,
FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total,
FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage),
FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage),
FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage)) %>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)%>%
View(AdultSongAccuracy)
AdultSongAccuracy<-
testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY,
FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total,
FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage),
FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage),
FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage)) %>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)
AdultSongAccuracy<- testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY,
FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total,
FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage),
FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage),
FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage)) %>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)
View(AdultSongAccuracy)
AdultSongAccuracy <- testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY)%>%
dplyr::mutate(FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total)%>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)%>%
dplyr::mutate(FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage))%>%
dplyr::mutate(FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage))%>%
dplyr::mutate(FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage))
AdultSongAccuracy2 <- testResponsesFC %>%
dplyr::select(song,type,response)%>%
dplyr::group_by(song,response)%>%
dplyr::summarize(., count = n())%>%
dcast(song ~ response)%>%
dplyr::mutate_all(~replace(., is.na(.), 0))%>%
dplyr::mutate(total = DANCE+HEALING+LULLABY,
FC_DANCE_percentage=DANCE/total,
FC_HEALING_percentage=HEALING/total,
FC_LULLABY_percentage=LULLABY/total,
FC_HEALING_DANCE = (FC_HEALING_percentage - FC_DANCE_percentage),
FC_LULLABY_DANCE = (FC_LULLABY_percentage - FC_DANCE_percentage),
FC_LULLABY_HEALING = (FC_LULLABY_percentage - FC_HEALING_percentage)) %>%
dplyr::select(-DANCE,-HEALING,-LULLABY,-total)
identical(AdultSongAccuracy,AdultSongAccuracy2)
disco.KFCmusicfeatures <- inner_join(disco.KFCmusicfeatures,AdultSongAccuracy, by = 'song')
View(disco.KFCmusicfeatures)
child_dance <- vector('list', 6)
child_dance[[1]] <- plot_correlation2('tempo_adj', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Adjusted tempo')
child_dance[[2]] <- plot_correlation2('macrometer_ord', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Macrometer consistency')
child_dance[[3]] <- plot_correlation2('variation_rhythmic', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Rhythmic Variation')
child_dance[[4]] <- plot_correlation2('mean_interval', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Mean Interval')
child_dance[[5]] <- plot_correlation2('melodic_thirds', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Melodic Thrids')
child_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance', 'Relative Strength of Modal Pitch Class')
grid.arrange(child_dance[[1]],child_dance[[2]],child_dance[[3]],child_dance[[4]],child_dance[[5]],child_dance[[6]], nrow = 2)
adult_dance <- vector('list', 6)
adult_dance[[1]] <- plot_correlation2('tempo_adj', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Adjusted tempo')
adult_dance[[2]] <- plot_correlation2('macrometer_ord', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Macrometer consistency')
adult_dance[[3]] <- plot_correlation2('variation_rhythmic', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Rhythmic Variation')
adult_dance[[4]] <- plot_correlation2('mean_interval', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Mean Interval')
adult_dance[[5]] <- plot_correlation2('melodic_thirds', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Melodic Thrids')
adult_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance(Adults)'), '% Dance', 'Relative Strength of Modal Pitch Class')
grid.arrange(adult_dance[[1]],adult_dance[[2]],adult_dance[[3]],adult_dance[[4]],adult_dance[[5]],adult_dance[[6]], nrow = 2)
adult_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% Dance(Adults)', 'Relative Strength of Modal Pitch Class')
grid.arrange(adult_dance[[1]],adult_dance[[2]],adult_dance[[3]],adult_dance[[4]],adult_dance[[5]],adult_dance[[6]], nrow = 2)
grid.arrange(child_dance[[1]],adult_dance[[1]],child_dance[[2]],adult_dance[[2]],child_dance[[3]],adult_dance[[3]], nrow = 2)
grid.arrange(child_dance[[1]],adult_dance[[1]],child_dance[[2]],adult_dance[[2]],child_dance[[3]],adult_dance[[3]], ncol = 2)
child_dance <- vector('list', 6)
child_dance[[1]] <- plot_correlation2('tempo_adj', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Adjusted tempo')
child_dance[[2]] <- plot_correlation2('macrometer_ord', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Macrometer consistency')
child_dance[[3]] <- plot_correlation2('variation_rhythmic', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Rhythmic Variation')
child_dance[[4]] <- plot_correlation2('mean_interval', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Mean Interval')
child_dance[[5]] <- plot_correlation2('melodic_thirds', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Melodic Thrids')
child_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Relative Strength of Modal Pitch Class')
adult_dance <- vector('list', 6)
adult_dance[[1]] <- plot_correlation2('tempo_adj', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Adjusted tempo')
adult_dance[[2]] <- plot_correlation2('macrometer_ord', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Macrometer consistency')
adult_dance[[3]] <- plot_correlation2('variation_rhythmic', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Rhythmic Variation')
adult_dance[[4]] <- plot_correlation2('mean_interval', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Mean Interval')
adult_dance[[5]] <- plot_correlation2('melodic_thirds', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Melodic Thrids')
adult_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Relative Strength of Modal Pitch Class')
grid.arrange(child_dance[[1]],adult_dance[[1]],child_dance[[2]],adult_dance[[2]],child_dance[[3]],adult_dance[[3]], ncol = 2)
adult_dance <- vector('list', 6)
adult_dance[[1]] <- plot_correlation2('tempo_adj', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Adjusted tempo')
adult_dance[[2]] <- plot_correlation2('macrometer_ord', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Macrometer consistency')
adult_dance[[3]] <- plot_correlation2('variation_rhythmic', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Rhythmic Variation')
adult_dance[[4]] <- plot_correlation2('mean_interval', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Mean Interval')
adult_dance[[5]] <- plot_correlation2('melodic_thirds', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Melodic Thrids')
adult_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Relative Strength of Modal Pitch Class')
grid.arrange(adult_dance[[1]],adult_dance[[2]],adult_dance[[3]],adult_dance[[4]],adult_dance[[5]],adult_dance[[6]], nrow = 2)
plot_correlation2 <- function(feature, intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
child_dance <- vector('list', 6)
child_dance[[1]] <- plot_correlation2('tempo_adj', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Adjusted tempo')
child_dance[[2]] <- plot_correlation2('macrometer_ord', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Macrometer consistency')
child_dance[[3]] <- plot_correlation2('variation_rhythmic', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Rhythmic Variation')
child_dance[[4]] <- plot_correlation2('mean_interval', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Mean Interval')
child_dance[[5]] <- plot_correlation2('melodic_thirds', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Melodic Thrids')
child_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (children)', 'Relative Strength of Modal Pitch Class')
adult_dance <- vector('list', 6)
adult_dance[[1]] <- plot_correlation2('tempo_adj', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Adjusted tempo')
adult_dance[[2]] <- plot_correlation2('macrometer_ord', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Macrometer consistency')
adult_dance[[3]] <- plot_correlation2('variation_rhythmic', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Rhythmic Variation')
adult_dance[[4]] <- plot_correlation2('mean_interval', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Mean Interval')
adult_dance[[5]] <- plot_correlation2('melodic_thirds', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Melodic Thrids')
adult_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (adults)', 'Relative Strength of Modal Pitch Class')
grid.arrange(child_dance[[1]],adult_dance[[1]],child_dance[[2]],adult_dance[[2]],child_dance[[3]],adult_dance[[3]], ncol = 2)
grid.arrange(child_lullaby[[1]],child_lullaby[[2]],child_lullaby[[3]],child_lullaby[[4]],nrow = 2)
grid.arrange(child_lullaby[[1]],child_lullaby[[2]],child_lullaby[[3]],child_lullaby[[4]],nrow = 2)
child_lullaby <- vector('list', 4)
child_lullaby[[1]] <- plot_correlation2('accent', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Accent')
child_lullaby[[2]] <- plot_correlation2('micrometer_duple', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Micrometer duple')
child_lullaby[[3]] <- plot_correlation2('range', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Range')
child_lullaby[[4]] <- plot_correlation2('quality', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% Lullaby', 'Quality')
grid.arrange(child_lullaby[[1]],child_lullaby[[2]],child_lullaby[[3]],child_lullaby[[4]],nrow = 2)
child_lullaby[[1]] <- plot_correlation2('accent', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (child)', 'Accent')
child_lullaby[[2]] <- plot_correlation2('micrometer_duple', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (child)', 'Micrometer duple')
child_lullaby[[3]] <- plot_correlation2('range', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (child)', 'Range')
child_lullaby[[4]] <- plot_correlation2('quality', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (child)', 'Quality')
child_lullaby[[1]] <- plot_correlation2('accent', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Accent')
child_lullaby[[2]] <- plot_correlation2('micrometer_duple', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Micrometer duple')
child_lullaby[[3]] <- plot_correlation2('range', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Range')
child_lullaby[[4]] <- plot_correlation2('quality', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Quality')
child_dance[[1]] <- plot_correlation2('tempo_adj', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
child_dance[[2]] <- plot_correlation2('macrometer_ord', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Macrometer consistency')
child_dance[[3]] <- plot_correlation2('variation_rhythmic', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Rhythmic Variation')
child_dance[[4]] <- plot_correlation2('mean_interval', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Mean Interval')
child_dance[[5]] <- plot_correlation2('melodic_thirds', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Melodic Thrids')
child_dance[[6]] <- plot_correlation2('rel_strength_top_pitchcls', 'DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Relative Strength of Modal Pitch Class')
child_lullaby[[1]] <- plot_correlation2('accent', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Accent')
child_lullaby[[2]] <- plot_correlation2('micrometer_duple', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Micrometer duple')
child_lullaby[[3]] <- plot_correlation2('range', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Range')
child_lullaby[[4]] <- plot_correlation2('quality', 'LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (kids)', 'Quality')
child_heal[[1]] <- plot_correlation2('micrometer_triple', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Micrometer triple')
child_heal[[2]] <- plot_correlation2('variation_rhythmic', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Rhythmic variation')
child_heal[[3]] <- plot_correlation2('pitch_class_variety', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Pitch-Class Variety')
child_heal[[4]] <- plot_correlation2('quality', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Quality')
child_heal <- vector('list', 4)
child_heal[[1]] <- plot_correlation2('micrometer_triple', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Micrometer triple')
child_heal[[2]] <- plot_correlation2('variation_rhythmic', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Rhythmic variation')
child_heal[[3]] <- plot_correlation2('pitch_class_variety', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Pitch-Class Variety')
child_heal[[4]] <- plot_correlation2('quality', 'HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (kids)', 'Quality')
grid.arrange(child_dance[[1]],adult_dance[[1]],child_dance[[2]],adult_dance[[2]],child_dance[[3]],adult_dance[[3]], ncol = 2)
adult_lullaby <- vector('list', 4)
adult_lullaby[[1]] <- plot_correlation2('accent', 'FC_LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (adults)', 'Accent')
adult_lullaby[[2]] <- plot_correlation2('micrometer_duple', 'FC_LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (adults)', 'Micrometer duple')
adult_lullaby[[3]] <- plot_correlation2('range', 'FC_LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (adults)', 'Range')
adult_lullaby[[4]] <- plot_correlation2('quality', 'FC_LULLABY_percentage', c('Healing', 'Lullaby', 'Dance'), '% lullaby (adults)', 'Quality')
grid.arrange(adult_lullaby[[1]],adult_lullaby[[2]],adult_lullaby[[3]],adult_lullaby[[4]],nrow = 2)
grid.arrange(child_lullaby[[1]],adult_lullaby[[1]],child_lullaby[[2]],adult_lullaby[[2]],
child_lullaby[[3]],adult_lullaby[[3]],child_lullaby[[4]],adult_lullaby[[4]], ncol = 2)
adult_heal <- vector('list', 4)
adult_heal[[1]] <- plot_correlation2('micrometer_triple', 'FC_HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (adults)', 'Micrometer triple')
adult_heal[[2]] <- plot_correlation2('variation_rhythmic', 'FC_HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (adults)', 'Rhythmic variation')
adult_heal[[3]] <- plot_correlation2('pitch_class_variety', 'FC_HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (adults)', 'Pitch-Class Variety')
adult_heal[[4]] <- plot_correlation2('quality', 'FC_HEALING_percentage', c('Healing', 'Lullaby', 'Dance'), '% healing (adults)', 'Quality')
grid.arrange(adult_heal[[1]],adult_heal[[2]],adult_heal[[3]],adult_heal[[4]],nrow = 2)
grid.arrange(child_heal[[1]],adult_heal[[1]],child_heal[[2]],adult_heal[[2]],
child_heal[[3]],adult_heal[[3]],child_heal[[4]],adult_heal[[4]], ncol = 2)
plot_correlation3 <- function(feature, intuition, types, ylab, xlab, adult_intuition){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes(x = feature, y = adult_intuition, color = 'type'), size = 2, alpha = .5) +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
plot_correlation3 <- function(feature, intuition, adult_intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes(x = feature, y = adult_intuition, color = 'type'), size = 2, alpha = .5) +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
test <- plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
test
plot_correlation3 <- function(feature, intuition, adult_intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes_string(x = feature, y = adult_intuition, color = 'type'), size = 2, alpha = .5) +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
test <- plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
plot_correlation3 <- function(feature, intuition, adult_intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes_string(x = feature, y = adult_intuition, color = 'type'), size = 2, shape = 'square') +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
plot_correlation3 <- function(feature, intuition, adult_intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes_string(x = feature, y = adult_intuition, fill = 'type'), size = 2, shape = 'square', colour = "black") +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
plot_correlation3 <- function(feature, intuition, adult_intuition, types, ylab, xlab){
m <- eval(parse(text = paste0('lm(',intuition, ' ~ ', feature, ', data = disco.KFCmusicfeatures)')))
plot <- ggplot(filter(disco.KFCmusicfeatures, type %in% types),
aes_string(x = feature, y = intuition, color = 'type')) + #, color = 'type' ... include this for regression line per type
geom_point(size = 2) + #, aes(col = type)
geom_point(aes_string(x = feature, y = adult_intuition, fill = 'type'), size = 2, pch = 21, colour = "black") +
ylab(ylab) +
xlab(xlab) +
labs(color = 'type')+
#stat_summary(fun.data=mean_cl_normal) +
geom_smooth(method='lm', formula = y~x) +
#geom_smooth(method='loess', formula = y~x, col = 'blue', alpha = 0.3) +
#geom_line(stat="smooth",formula = y~x, method = "loess", alpha = 0.4, col = "blue", size = 1) +
theme(panel.background = element_blank(),
panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
axis.line = element_line(colour = "black"),
panel.border = element_rect(colour = "black", fill=NA, size=1),
legend.position = "none") +
ggtitle(paste0('R-squared = ', signif(summary(m)$r.squared, 3), ', p = ', signif(summary(m)$coef[2,4], 3)))
return(plot)
}
plot_correlation3('tempo_adj', 'DANCE_percentage', 'FC_DANCE_percentage', c('Healing', 'Lullaby', 'Dance'), '% dance (kids)', 'Adjusted tempo')
df <- data.frame(rep(c("male", "female"), 5), rep(c("Drug1", "Drug2"),
5), pre_D1=c(10:1), post_D1=c(1:10), pre_D2=c(25:16),
post_D2=c(16:25))
colnames(df)[1:2] <- c("Sex", "Drug")
df$ID <- factor(1:10)
dfm <- melt(df, id=c(1:2, 7))
dfm$d <- "D1"
dfm$d[grep("D2", dfm$variable)] <- "D2"
dfm$code <- paste(dfm$ID, dfm$d, sep="_")
ggplot(dfm, aes(variable, value)) + geom_point() +
facet_grid(Sex~Drug) + geom_line(aes(group=code))
View(df)
View(dfm)
library(readxl)
ff <- read_excel("FF dataset.xlsx")
setwd('/Users/courtneyhilton/git/ff/data')
library(readxl)
ff <- read_excel("FF dataset.xlsx")
# config
knitr::opts_chunk$set(echo = FALSE, message = FALSE, warning = FALSE)
library(pacman)
library(broom)
library(lsr)
library(lme4)
library(lmerTest)
library(patchwork)
library(car)
library(renv)
library(TOSTER)
# RY:data manipulation
library(reshape2)
library(xtable)
library(tidyverse)
library(Hmisc)
pacman::p_load(tidyjson,tidyverse,jsonlite,rjson,dummies,tibble,Rmisc,scales,rmarkdown,gdata,psycho,ggpubr)
# create a snapshot of all package versions for posterity
renv::consent(provided = TRUE)
